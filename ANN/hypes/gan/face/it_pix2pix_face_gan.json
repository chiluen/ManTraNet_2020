{
    "dataset": "face",
    "task": "gan",
    "method": "image_translator",
    "data": {
      "data_dir": "~/DataSet/Sketch2VIS",
      "image_tool": "cv2",
      "input_mode": "BGR",
      "workers": 8,
      "mean_value": [128, 128, 128],
      "normalize": {
        "div_value": 255,
        "mean": [0.5, 0.5, 0.5],
        "std": [0.5, 0.5, 0.5]
      }
    },
    "train": {
      "loader": "cyclegan",
      "batch_size": 1,
      "aug_trans": {
        "trans_seq": ["random_hflip", "random_crop"],
        "random_hflip": {
          "ratio": 0.5,
          "swap_pair": []
        },
        "random_crop": {
          "ratio": 1.0,
          "crop_size": [128, 128],
          "method": "random",
          "allow_outside_center": false
        }
      },
      "data_transformer": {
        "size_mode": "none",
        "input_size": [128, 128],
        "align_method": "only_pad"
      }
    },
    "val": {
      "loader": "cyclegan",
      "batch_size": 1,
      "aug_trans": {
        "trans_seq": ["random_crop"],
        "random_crop": {
          "ratio": 1.0,
          "crop_size": [128, 128],
          "method": "center",
          "allow_outside_center": false
        }
      },
      "data_transformer": {
        "size_mode": "none",
        "input_size": [128, 128],
        "align_method": "only_scale"
      }
    },
    "test": {
      "batch_size": 1,
      "aug_trans": {
        "trans_seq": ["random_crop"],
        "random_crop": {
          "ratio": 1.0,
          "crop_size": [128, 128],
          "method": "center",
          "allow_outside_center": false
        }
      },
      "data_transformer": {
        "size_mode": "none"
      }
    },
    "network": {
      "generatorA": {
        "net_type": "resnet_9blocks",
        "init_type": "normal",
        "init_gain": 0.02,
        "in_c": 3,
        "out_c": 3,
        "num_f": 64
      },
      "generatorB": {
        "net_type": "resnet_9blocks",
        "init_type": "normal",
        "init_gain": 0.02,
        "in_c": 3,
        "out_c": 3,
        "num_f": 64
      },
      "discriminatorA": {
        "net_type": "n_layers",
        "init_type": "normal",
        "init_gain": 0.02,
        "n_layers": 3,
        "num_f": 64,
        "in_c": 3
      },
      "discriminatorB": {
        "net_type": "n_layers",
        "init_type": "normal",
        "init_gain": 0.02,
        "n_layers": 3,
        "num_f": 64,
        "in_c": 3
      },
      "use_dropout": false,
      "norm_type": "instancenorm",
      "model_name": "face_gan",
      "checkpoints_name": "fg_lightcnn_face_gan",
      "checkpoints_dir": "checkpoints/gan/face",
      "imgpool_size": 50
    },
    "logging": {
      "logfile_level": "info",
      "stdout_level": "info",
      "log_file": "./log/gan/fg_lightcnn_face_gan.log",
      "log_format": "%(asctime)s %(levelname)-7s %(message)s",
      "rewrite": true
    },
    "solver": {
      "lr": {
        "metric": "epoch",
        "base_lr": 0.0002,
        "lr_policy": "lambda_fixlinear",
        "lambda_fixlinear": {
          "fix_value": 100,
          "linear_value": 100
        }
      },
      "optim": {
        "optim_method": "adam",
        "adam": {
          "betas": [0.5, 0.999],
          "eps": 1e-08,
          "weight_decay": 0.0
        }
      },
      "display_iter": 100,
      "save_iters": 5000,
      "test_interval": 5000,
      "max_epoch": 200
    },
    "loss": {
      "loss_weights": {
        "cycle_loss": 10,
        "idt_loss": 5
      },
      "params": {
        "gan_mode": "lsgan"
      }
    }
}
